openapi: 3.0.3
info:
  title: REST HTTP Design
  description: |-
    This is the REST HTTP design used to communicate between the frontend and backend
    of the web application.
    
    [Go Back](https://gnyoufun.github.io/IT-101/api)
  version: 1.1.0
servers:
  - url: http://localhost:4000
paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Returns a list of all user_ids
      operationId: getUsers
      responses:
        '200':
          $ref: '#/components/requestBodies/UserArray'
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
    post:
      tags:
        - Users
      summary: Create a new user
      description: Creates a new user record with attributes specified in the request body
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid attributes, or user already exists
  /users/login:
    get:
      tags:
        - Users
      summary: Logs in a specified user
      description: Log in a user with their username and password, returns an auth token and user_id for future requests
      operationId: loginUser
      parameters:
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        '400':
          description: Invalid username/password supplied
        '401':
          description: No username/password supplied
  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get a specified user
      description: Returns all relevant user information
      operationId: getUser
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id not found
    put:
      tags:
        - Users
      summary: Update user details
      description: Update user details according to the attributes specified in the request body
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          description: The specified user to update
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      requestBody:
        description: User object with updated details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Incorrect attributes specified
        '404':
          description: User_id not found
    delete:
      tags:
        - Users
      summary: Delete a specified user
      description: ''
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: The specified user to delete
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id not found
  /users/{user_id}/logout:
    get:
      tags:
        - Users
      summary: Logs out a specified user
      description: Log out a user (according to user_id) and invalidate their token
      operationId: logoutUser
      parameters:
        - name: user_id
          in: path
          description: The specified user to logout
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: User_id is not logged in
        '404':
          description: User_id not found
  /users/{user_id}/games:
    get:
      tags:
        - Games
      summary: Get all games of a user
      description: ''
      operationId: getUserGames
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/requestBodies/GameArray'
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id not found
    post:
      tags:
        - Games
      summary: Add a game for a user
      description: Add a new game record for a user, with attributes and game specified in the request body
      operationId: createUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      requestBody:
        description: Created game object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid attributes, or game already exists
        '404':
          description: User_id not found
  /users/{user_id}/games/{game}:
    get:
      tags:
        - Games
      summary: Get a game for a user
      description: Returns all relevant game information
      operationId: getUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game
          in: path
          description: The specified game
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or game not found
    put:
      tags:
        - Games
      summary: Update a game's details for a user
      description: Update game details according to the attributes specified in the request body
      operationId: updateUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game
          in: path
          description: The specified game to update
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      requestBody:
        description: Game object with updated details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Game'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Game'
        '400':
          description: Incorrect attributes specified
        '404':
          description: User_id or game not found
    delete:
      tags:
        - Games
      summary: Delete a user's specified game
      description: ''
      operationId: deleteUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game
          in: path
          description: The specified game to delete
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or game not found 
  /users/{user_id}/review:
    get:
      tags:
        - Reviews
      summary: Get all reviews for a user 
      description: Returns all reviews the user recorded
      operationId: getUserReview
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
        - name: StartDate
          in: query
          description: Beginning date of queried reviews
          required: false
          schema:
            type: string
            format: date
        - name: EndDate
          in: query
          description: Ending date of queried reviews
          required: false
          schema:
            type: string
            format: date
      responses:
        '200':
          $ref: '#/components/requestBodies/ReviewArray'
        '400':
          description: invalid token supplied 
        '401':
          description: No token supplied 
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id not found
    post:
      tags:
        - Reviews
      summary: Add a new raid review
      description: Add a new raid review with the attributes specified in the request body
      operationId: addRaidReview
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      requestBody:
        description: Game object with updated details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RaidReview'
      responses:
        '200':
          $ref: '#/components/schemas/RaidReview'
        '400':
          description: invalid attributes
        '404':
          description: User_id not found
    delete:
      tags:
        - Reviews
      summary: Delete raid records
      description: Delete all reviews within a specified time period
      operationId: deleteRaidReviews
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
        - name: StartDate
          in: query
          description: Beginning date of queried reviews
          required: true
          schema:
            type: string
            format: date
        - name: EndDate
          in: query
          description: Ending date of queried reviews
          required: true
          schema:
            type: string
            format: date
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id not found
  /users/{user_id}/review/{game}:
    get:
      tags:
        - Reviews
      summary: Get reviews of a specified game for a user 
      description: Returns reviews the user recorded for a specified Game Title
      operationId: getSpecifiedUserReviews
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game
          in: path
          description: The specified Game Title
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/requestBodies/ReviewArray'
        '400':
          description: invalid token supplied 
        '401':
          description: No token supplied 
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or game not found
    delete:
      tags:
        - Reviews
      summary: Delete a user's reviews for a specified game title
      description: remove all reviews for a specified game for a user 
      operationId: deleteUserReviews
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game
          in: path
          description: The specified game to delete
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or game not found
  /users/{user_id}/review/{game}/{friend}:
    get:
      tags:
        - Reviews
      summary: Get reviews having a teammate/friend for a user 
      description: Returns reviews that the team member the user played with for a specified game
      operationId: getRecordByTeammate
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game
          in: path
          description: The specified Game Title
          required: true
          schema:
            type: string
        - name: friend
          in: path
          description: The specified teammate's name
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/requestBodies/ReviewArray'
        '400':
          description: invalid token supplied 
        '401':
          description: No token supplied 
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or game or friend not found
  /users/{user_id}/review/{_id}:
    get:
      tags:
        - Reviews
      summary: Get a specific review for a user 
      description: Returns a review the user recorded with a unique _id
      operationId: getUserReviewById
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: _id
          in: path
          description: The specified review Id
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/schemas/RaidReview'
        '400':
          description: invalid token supplied 
        '401':
          description: No token supplied 
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or _id not found
    put:
      tags:
        - Reviews
      summary: Update a specific review details for a user
      description: Update a specific review (by its _id) details according to the attributes specified in the request body
      operationId: updateUserReviewById
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: _id
          in: path
          description: The specified id of the review record to update
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      requestBody:
        description: Game object with updated details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RaidReview'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RaidReview'
        '400':
          description: Incorrect attributes specified
        '404':
          description: User_id or _id not found
    delete:
      tags:
        - Reviews
      summary: Delete a user's reviews with specified game title
      description: remove all reviews with a specified game title for a user 
      operationId: deleteUserReviewsById
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: _id
          in: path
          description: The specified id of the review for deletion
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid token supplied
        '401':
          description: No token supplied
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or _id not found    
  /users/{user_id}/teammate/{game}:
    get:
      tags:
        - Teammates
      summary: Get team members of a game for a user 
      description: Returns the team member the user played with for a specified Game Title
      operationId: getTeammate
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game
          in: path
          description: The specified Game Title
          required: true
          schema:
            type: string
        - name: Authorization
          in: header
          description: Authentication token
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/requestBodies/TeammateArray'
        '400':
          description: invalid token supplied 
        '401':
          description: No token supplied 
        '403':
          description: Invalid privileges for supplied token
        '404':
          description: User_id or game not found
components:
  schemas:
    Token:
      type: object
      properties:
        _id:
          type: string
          format: hexadecimal_24
          example: 632bdb704a342e1d5ab2dcd3
        Token:
          type: string
          example: asdf1234jkl5678
    LoginUser:
      type: object
      properties:
        username:
          type: string
          example: theUser
        password:
          type: string
          example: Password.123
    User:
      type: object
      properties:
        _id:
          type: string
          format: hexadecimal_24
          example: 632bdb704a342e1d5ab2dcd3
        UserName:
          type: string
          example: theUser
    Game:
      type: object
      properties:
        GameTitle:
          type: string
          example: Minecraft
        GameType:
          type: string
          example: Open World
    Teammate:
      type: object
      properties:
        InGameID: 
          type: string
          example: teammateName
        Level: 
          type: integer
          format: int64
          example: 10
    RaidReview:
      type: object
      properties:
        GameTitle:
          type: string
          example: FFXIV
        UserId:
          type: string
          format: hexadecimal_24
          example: 632bdb704a342e1d5ab2dcd3
        date:
          type: string
          example: 21/09/2022
        team:
          type: array
          items:
            type: object
            properties:
              in_game_id:
                type: string
                example: Player123
              level:
                type: integer
                format: int64
                example: 5
        durations:
          type: integer
          format: int64
          example: 20
        result:
          type: string
          enum: ["Win", "Draw", "Lost"]
        difficulty:
          type: integer
          format: int32
          minimum: 1
          maximum: 10
          example: 5
        comments:
          type: string
          example: No Comment
  requestBodies:
    UserArray:
      description: List of user objects
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
    GameArray:
      description: List of game objects
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Game'
    TeammateArray: 
      description: List of Teammate objects 
      content:
        application/json:
          schema:
            type: array
            items: 
              $ref: '#/components/schemas/Teammate'
    ReviewArray: 
      description: List of review objects 
      content:
        application/json:
          schema:
            type: array
            items: 
              $ref: '#/components/schemas/RaidReview'