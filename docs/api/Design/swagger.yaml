openapi: 3.0.3
info:
  title: REST HTTP Design
  description: |-
    This is the REST HTTP design used to communicate between the frontend and backend
    of the web application.
    
    [Go Back](https://gnyoufun.github.io/IT-101/api)
  version: 1.1.0
servers:
  - url: http://localhost:3000
paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Returns a list of all user_ids
      operationId: getUsers
      parameters:
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
        '401':
          description: No username/password supplied
        '403':
          description: Invalid privileges for supplied username/password
    post:
      tags:
        - Users
      summary: Create a new user
      description: Creates a new user record with attributes specified in the request body
      operationId: createUser
      parameters:
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid attributes, or user already exists
  /users/{user_id}:
    get:
      tags:
        - Users
      summary: Get a specified user
      description: Returns all relevant user information
      operationId: getUser
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username/password supplied
        '401':
          description: No username/password supplied
        '403':
          description: Invalid privileges for supplied username/password
        '404':
          description: User_id not found
    put:
      tags:
        - Users
      summary: Update user details
      description: Update user details according to the attributes specified in the request body
      operationId: updateUser
      parameters:
        - name: user_id
          in: path
          description: The specified user to update
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      requestBody:
        description: User object with updated details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Incorrect attributes specified
        '404':
          description: User_id not found
    delete:
      tags:
        - Users
      summary: Delete a specified user
      description: ''
      operationId: deleteUser
      parameters:
        - name: user_id
          in: path
          description: The specified user to delete
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid username/password supplied
        '401':
          description: No username/password supplied
        '403':
          description: Invalid privileges for supplied username/password
        '404':
          description: User_id not found
  /users/{user_id}/games:
    get:
      tags:
        - Games
      summary: Get all games of a user
      description: ''
      operationId: getUserGames
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username/password supplied
        '401':
          description: No username/password supplied
        '403':
          description: Invalid privileges for supplied username/password
        '404':
          description: User_id not found
    post:
      tags:
        - Games
      summary: Add a game for a user
      description: Add a new game record for a user, with attributes and game_id specified in the request body
      operationId: createUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      requestBody:
        description: Created game object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid attributes, or game already exists
        '404':
          description: User_id not found
  /users/{user_id}/games/{game_id}:
    get:
      tags:
        - Games
      summary: Get a game for a user
      description: Returns all relevant game information
      operationId: getUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game_id
          in: path
          description: The specified game
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username/password supplied
        '401':
          description: No username/password supplied
        '403':
          description: Invalid privileges for supplied username/password
        '404':
          description: User_id or game_id not found
    put:
      tags:
        - Games
      summary: Update a game's details for a user
      description: Update game details according to the attributes specified in the request body
      operationId: updateUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game_id
          in: path
          description: The specified game to update
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      requestBody:
        description: Game object with updated details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Incorrect attributes specified
        '404':
          description: User_id or game_id not found
    delete:
      tags:
        - Games
      summary: Delete a user's specified game
      description: ''
      operationId: deleteUserGame
      parameters:
        - name: user_id
          in: path
          description: The specified user
          required: true
          schema:
            type: string
        - name: game_id
          in: path
          description: The specified game to delete
          required: true
          schema:
            type: string
        - name: username
          in: header
          description: The user name for authentication
          required: true
          schema:
            type: string
        - name: password
          in: header
          description: The password for authentication
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
        '400':
          description: Invalid username/password supplied
        '401':
          description: No username/password supplied
        '403':
          description: Invalid privileges for supplied username/password
        '404':
          description: User_id or game_id not found
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 10
        username:
          type: string
          example: theUser
        firstName:
          type: string
          example: John
        lastName:
          type: string
          example: James
        email:
          type: string
          example: john@email.com
        password:
          type: string
          example: '12345'
        phone:
          type: string
          example: '12345'
        userStatus:
          type: integer
          description: User Status
          format: int32
          example: 1
      xml:
        name: user
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'